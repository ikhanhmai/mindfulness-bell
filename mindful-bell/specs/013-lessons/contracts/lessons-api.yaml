openapi: 3.0.0
info:
  title: Lessons API
  version: 1.0.0
  description: Local API contracts for managing mindfulness lessons and insights

paths:
  /lessons:
    get:
      summary: List lessons with filtering and search
      operationId: listLessons
      parameters:
        - name: search
          in: query
          description: Full-text search across title and content
          schema:
            type: string
        - name: linkedToObservation
          in: query
          description: Filter lessons linked to specific observation ID
          schema:
            type: string
            format: uuid
        - name: observationType
          in: query
          description: Filter by type of linked observations
          schema:
            type: array
            items:
              type: string
              enum: [desire, fear, affliction]
        - name: dateFrom
          in: query
          description: Start date for filtering (inclusive)
          schema:
            type: string
            format: date
        - name: dateTo
          in: query
          description: End date for filtering (inclusive)
          schema:
            type: string
            format: date
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: sortBy
          in: query
          description: Sort field
          schema:
            type: string
            enum: [created_at, updated_at, relevance, title]
            default: created_at
        - name: sortOrder
          in: query
          description: Sort order
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: includeDeleted
          in: query
          description: Include soft-deleted lessons
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of lessons
          content:
            application/json:
              schema:
                type: object
                properties:
                  lessons:
                    type: array
                    items:
                      $ref: '#/components/schemas/LessonSummary'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      summary: Create new lesson
      operationId: createLesson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonCreate'
      responses:
        '201':
          description: Lesson created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'

  /lessons/{id}:
    get:
      summary: Get specific lesson with full details
      operationId: getLesson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lesson details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'

    put:
      summary: Update lesson
      operationId: updateLesson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonUpdate'
      responses:
        '200':
          description: Lesson updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'

    delete:
      summary: Soft delete lesson
      operationId: deleteLesson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lesson deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    type: boolean

components:
  schemas:
    Lesson:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
          maxLength: 200
        content:
          type: string
          maxLength: 5000
        linkedObservations:
          type: array
          items:
            $ref: '#/components/schemas/ObservationSummary'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [id, content, linkedObservations, createdAt, updatedAt]

    LessonSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
        preview:
          type: string
          description: First 200 characters of content
        linkedObservationCount:
          type: integer
        createdAt:
          type: string
          format: date-time
      required: [id, preview, linkedObservationCount, createdAt]

    LessonCreate:
      type: object
      properties:
        title:
          type: string
          nullable: true
          maxLength: 200
        content:
          type: string
          minLength: 1
          maxLength: 5000
        observationIds:
          type: array
          items:
            type: string
            format: uuid
      required: [content]

    LessonUpdate:
      type: object
      properties:
        title:
          type: string
          nullable: true
          maxLength: 200
        content:
          type: string
          minLength: 1
          maxLength: 5000
      required: [content]

    ObservationSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [desire, fear, affliction]
        preview:
          type: string
        tags:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
      required: [id, type, preview, tags, createdAt]

    Pagination:
      type: object
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        hasMore:
          type: boolean
      required: [total, limit, offset, hasMore]