openapi: 3.0.0
info:
  title: Observations API
  version: 1.0.0
  description: Local API contracts for managing mindfulness observations

paths:
  /observations:
    get:
      summary: List observations with filtering and search
      operationId: listObservations
      parameters:
        - name: type
          in: query
          description: Filter by observation type
          schema:
            type: array
            items:
              type: string
              enum: [desire, fear, affliction]
        - name: search
          in: query
          description: Full-text search query
          schema:
            type: string
        - name: tags
          in: query
          description: Filter by tags (comma-separated)
          schema:
            type: string
        - name: dateFrom
          in: query
          description: Start date for filtering (inclusive)
          schema:
            type: string
            format: date
        - name: dateTo
          in: query
          description: End date for filtering (inclusive)
          schema:
            type: string
            format: date
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 50
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: sortBy
          in: query
          description: Sort field
          schema:
            type: string
            enum: [created_at, updated_at, relevance]
            default: created_at
        - name: sortOrder
          in: query
          description: Sort order
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: includeDeleted
          in: query
          description: Include soft-deleted observations
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of observations
          content:
            application/json:
              schema:
                type: object
                properties:
                  observations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Observation'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  searchMetadata:
                    type: object
                    properties:
                      query:
                        type: string
                      totalMatches:
                        type: integer
                      executionTimeMs:
                        type: number

    post:
      summary: Create new observation
      operationId: createObservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservationCreate'
      responses:
        '201':
          description: Observation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '400':
          description: Invalid observation data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /observations/{id}:
    get:
      summary: Get specific observation
      operationId: getObservation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Observation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '404':
          description: Observation not found

    put:
      summary: Update observation
      operationId: updateObservation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservationUpdate'
      responses:
        '200':
          description: Observation updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '404':
          description: Observation not found
        '400':
          description: Invalid update data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

    delete:
      summary: Soft delete observation
      operationId: deleteObservation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: permanent
          in: query
          description: Permanently delete instead of soft delete
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Observation deleted (soft delete)
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    type: boolean
                  undoTimeoutSeconds:
                    type: integer
                    description: Seconds until permanent deletion
        '204':
          description: Observation permanently deleted
        '404':
          description: Observation not found

  /observations/{id}/restore:
    post:
      summary: Restore soft-deleted observation
      operationId: restoreObservation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Observation restored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '404':
          description: Observation not found or not deleted
        '410':
          description: Observation permanently deleted, cannot restore

  /observations/tags:
    get:
      summary: Get all available tags with usage counts
      operationId: getTags
      parameters:
        - name: search
          in: query
          description: Search for tags starting with query
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of tags to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: minUsage
          in: query
          description: Minimum usage count to include tag
          schema:
            type: integer
            minimum: 1
            default: 1
      responses:
        '200':
          description: List of tags with usage statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        count:
                          type: integer
                        lastUsed:
                          type: string
                          format: date-time
                  suggestions:
                    type: array
                    items:
                      type: object
                      properties:
                        tag:
                          type: string
                        confidence:
                          type: number
                          minimum: 0
                          maximum: 1
                        reason:
                          type: string
                          enum: [frequent, recent, pattern]

  /observations/export:
    post:
      summary: Export observations in various formats
      operationId: exportObservations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  type: string
                  enum: [json, csv, txt, encrypted]
                filters:
                  type: object
                  properties:
                    types:
                      type: array
                      items:
                        type: string
                        enum: [desire, fear, affliction]
                    dateFrom:
                      type: string
                      format: date
                    dateTo:
                      type: string
                      format: date
                    tags:
                      type: array
                      items:
                        type: string
                    includeDeleted:
                      type: boolean
                      default: false
                options:
                  type: object
                  properties:
                    includeMetadata:
                      type: boolean
                      default: true
                    anonymize:
                      type: boolean
                      default: false
                      description: Remove personally identifiable content
                    password:
                      type: string
                      description: Required for encrypted format
              required: [format]
      responses:
        '200':
          description: Export completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportId:
                    type: string
                  downloadUrl:
                    type: string
                    description: Local file URL for download
                  metadata:
                    type: object
                    properties:
                      totalEntries:
                        type: integer
                      dateRange:
                        type: object
                        properties:
                          from:
                            type: string
                            format: date-time
                          to:
                            type: string
                            format: date-time
                      fileSize:
                        type: integer
                        description: File size in bytes
                      expiresAt:
                        type: string
                        format: date-time
                        description: When export file will be deleted

components:
  schemas:
    Observation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [desire, fear, affliction]
        content:
          type: string
          maxLength: 2000
        tags:
          type: array
          items:
            type: string
          description: Array of tag strings extracted from content
        bellEventId:
          type: string
          format: uuid
          nullable: true
          description: ID of bell event that triggered this observation
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        metadata:
          type: object
          properties:
            wordCount:
              type: integer
            sentiment:
              type: object
              properties:
                score:
                  type: number
                  minimum: -1
                  maximum: 1
                confidence:
                  type: number
                  minimum: 0
                  maximum: 1
            location:
              type: object
              nullable: true
              properties:
                name:
                  type: string
                coordinates:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
      required: [id, type, content, tags, createdAt, updatedAt]

    ObservationCreate:
      type: object
      properties:
        type:
          type: string
          enum: [desire, fear, affliction]
        content:
          type: string
          minLength: 1
          maxLength: 2000
        tags:
          type: array
          items:
            type: string
            pattern: '^[a-zA-Z0-9_-]+$'
          description: Optional explicit tags (will be merged with auto-extracted)
        bellEventId:
          type: string
          format: uuid
          nullable: true
        metadata:
          type: object
          properties:
            location:
              type: object
              nullable: true
              properties:
                name:
                  type: string
                coordinates:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
      required: [type, content]

    ObservationUpdate:
      type: object
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 2000
        tags:
          type: array
          items:
            type: string
            pattern: '^[a-zA-Z0-9_-]+$'
      required: [content]

    Pagination:
      type: object
      properties:
        total:
          type: integer
          description: Total number of items available
        limit:
          type: integer
          description: Number of items per page
        offset:
          type: integer
          description: Number of items skipped
        hasMore:
          type: boolean
          description: Whether more items are available
      required: [total, limit, offset, hasMore]

    ValidationError:
      type: object
      properties:
        error:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
              code:
                type: string
      required: [error]